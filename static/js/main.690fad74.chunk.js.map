{"version":3,"sources":["getWeb3.js","components/Add_Voter.js","components/Update_Status.js","components/Add_Proposal.js","components/Vote_Proposal.js","components/Tally_Votes.js","components/Results.js","components/Get_Voter.js","components/Get_Proposal.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","AddVoter","props","useState","inputValue","setInputValue","workflowStatus","Card","style","width","Body","placeholder","value","onChange","event","target","Button","variant","onClick","contract","instance","methods","addVoter","send","from","admin","on","Store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","then","events","VoterRegistered","once","returnValues","voterAddress","error","UpdateStatus","WorkflowStatus","0","1","2","3","4","5","updateStatus","statusNumber","setWorkflowStatus","startProposalsRegistering","WorkflowStatusChange","previousStatus","newStatus","Number","endProposalsRegistering","startVotingSession","endVotingSession","AddProposal","voter","addProposal","ProposalRegistered","proposalId","VoteProposal","setVote","Voted","TallyVotes","tallyVotesDraw","Results","React","resultText","setResultText","getResults","getWinner","call","winners","text","length","forEach","element","description","id","Text","GetVoter","addrValue","setInputAddr","voterText","setVoterText","getVoter","_getVoter","hasVoted","toString","isRegistered","votedProposalId","InputGroup","className","FormControl","GetProposal","proposalText","setProposalText","propIdValue","setInputPropId","getOneProposal","proposal","App","isProviderLoaded","myWeb3Api","accounts","owned","state","setState","account","setAccount","setContract","setAdmin","currentStatus","location","reload","useEffect","eth","getAccounts","net","getId","networkId","deployedNetwork","VotingContract","networks","Contract","abi","address","owner","alert","loadWorkflowStatus","_contract","status","background","display","justifyContent","alignItems","height","ws","class","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.690fad74.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { Store } from 'react-notifications-component';\nimport Card from 'react-bootstrap/Card'\n\nfunction AddVoter(props) {\n    const [inputValue, setInputValue] = useState('');\n    const onChangeInput = (event) => {\n        setInputValue(event.target.value);\n      } \n    const onSubmit = () => {\n    const contract = props.instance;     \n      try {\n        contract.methods.addVoter(inputValue).send({from: props.admin})\n          .on('error', function(){\n            Store.addNotification({\n              title: \"Error :\",\n              message: `Voter already added`,\n              type: \"danger\",\n              insert: \"top\",\n              container: \"top-center\",\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n              dismiss: {\n                duration: 6000,\n                onScreen: true\n            } });\n            })\n          .then(contract.events.VoterRegistered()\n          .once('data', function(event) {\n            Store.addNotification({\n              title: \"Event data :\",\n              message: `${event.event} with adress : ${event.returnValues.voterAddress}`,\n              type: \"success\",\n              insert: \"top\",\n              container: \"top-center\",\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n              dismiss: {\n                duration: 6000,\n                onScreen: true\n              }\n            });\n          })\n          )\n          setInputValue('')     \n        } catch (error) {\n          Store.addNotification({\n            title: \"Error :\",\n            message: `Wrong address format`,\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 6000,\n              onScreen: true\n          } });\n          setInputValue('')\n        }     \n    }\n    return (\n          <div>\n          { props.workflowStatus > 0 ?\n            <></> :\n            <>\n            <Card style={{ width: '24rem' }}>\n              <Card.Body>\n                <input placeholder='Enter Address' value={inputValue || ''} onChange={onChangeInput} />\n                <Button variant=\"success\" onClick={onSubmit}>Add Voter</Button>\n              </Card.Body>   \n            </Card>      \n            </>\n          }\n         </div>\n    )\n}\n\nexport default AddVoter;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport Button from 'react-bootstrap/esm/Button';\nimport { Store } from 'react-notifications-component';\n\nfunction UpdateStatus(props) {\n      const WorkflowStatus = {\n        0: 'RegisteringVoters',\n        1: 'ProposalsRegistrationStarted',\n        2: 'ProposalsRegistrationEnded',\n        3: 'VotingSessionStarted',\n        4: 'VotingSessionEnded',\n        5: 'VotesTallied'\n    }\n    const updateStatus = (statusNumber) => {\n        const contract = props.instance;\n        const admin = props.admin;\n        const setWorkflowStatus = props.setWorkflowStatus\n        switch (statusNumber) {\n          case 1: \n            contract.methods.startProposalsRegistering().send({from: admin})\n            .on('error', function(){ \n              Store.addNotification({\n                title: \"Error :\",\n                message: `Wrong status`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } }); \n            })\n            .then(contract.events.WorkflowStatusChange()\n            .once('data', function(event) {\n              Store.addNotification({\n                title: \"Event data: \",\n                message: `${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n            setWorkflowStatus(Number(event.returnValues.newStatus))\n            })\n            )\n            break;\n          case 2: \n            contract.methods.endProposalsRegistering().send({from: admin})\n            .on('error', function(){ \n              Store.addNotification({\n                title: \"Error :\",\n                message: `Wrong status`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n             })\n            .then(contract.events.WorkflowStatusChange()\n            .once('data', function(event) {\n              Store.addNotification({\n                title: \"Event data: \",\n                message: `${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n              setWorkflowStatus(Number(event.returnValues.newStatus))\n            })\n            )\n            break;\n          case 3: \n            contract.methods.startVotingSession().send({from: admin})\n            .on('error', function(){ \n              Store.addNotification({\n                title: \"Error :\",\n                message: `Wrong status`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n             })\n            .then(contract.events.WorkflowStatusChange()\n            .once('data', function(event) {\n              Store.addNotification({\n                title: \"Event data: \",\n                message: `${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n              setWorkflowStatus(Number(event.returnValues.newStatus))\n            })\n            )\n            break;\n          case 4:\n            contract.methods.endVotingSession().send({from: admin})\n            .on('error', function(){ \n              Store.addNotification({\n                title: \"Error :\",\n                message: `Wrong status`,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n             })\n            .then(contract.events.WorkflowStatusChange()\n            .once('data', function(event) {\n              Store.addNotification({\n                title: \"Event data: \",\n                message: `${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 6000,\n                  onScreen: true\n              } });\n              setWorkflowStatus(Number(event.returnValues.newStatus))\n             \n            })\n            )\n            break;\n          default:\n            Store.addNotification({\n              title: \"Error :\",\n              message: `Wrong status`,\n              type: \"danger\",\n              insert: \"top\",\n              container: \"top-center\",\n              animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n              animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n              dismiss: {\n                duration: 6000,\n                onScreen: true\n            } });\n        }\n      }\n      return (\n          <>\n         \n            { props.workflowStatus !== 0 ?\n                 <></>:\n                <Button  onClick={() => updateStatus(1)} >Start Proposals Registering</Button>\n            }\n            { props.workflowStatus !== 1 ?\n                 <></>:\n                <Button  onClick={() => updateStatus(2)}>End Proposals Registering</Button>\n            }\n            { props.workflowStatus !== 2 ?\n             <></>:\n            <Button  onClick={() => updateStatus(3)}>Start Voting Session</Button>\n            }\n           { props.workflowStatus !== 3 ?\n             <></>:\n            <Button  onClick={() => updateStatus(4)}>End Voting Session</Button>\n           }\n          </>\n      )\n}\n\nexport default UpdateStatus;","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { ReactNotifications, Store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nfunction AddProposal(props) {\n    const voter = props.voter\n    const [inputValue, setInputValue] = useState('');\n    const onChangeInput = (event) => {\n        setInputValue(event.target.value);\n      }\n    const onSubmit = () => {\n        const contract = props.instance;\n        contract.methods.addProposal(inputValue).send({from: voter[0]})\n            .on('error', function(){\n                Store.addNotification({\n                    title: \"Error\",\n                    message: `Can NOT add proposal`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 6000,\n                      onScreen: true\n                  } });\n                })\n            .then(contract.events.ProposalRegistered()\n            .once('data', function(event) {\n                Store.addNotification({\n                    title: \"Event data: \",\n                    message: `Your proposal has been registered with number #${event.returnValues.proposalId}`,\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 6000,\n                      onScreen: true\n                  } });\n            })\n        )\n        setInputValue('')\n    }\n    return (\n          <>\n          { props.workflowStatus !== 1 ?\n            <></> :\n            <>\n            <input placeholder='Enter proposal' value={inputValue || ''} onChange={onChangeInput} />\n            <Button variant=\"success\" onClick={onSubmit}>Register Proposal</Button>\n            </>\n          }\n         </>\n    )\n}\n\nexport default AddProposal;","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { ReactNotifications, Store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nfunction VoteProposal(props) {\n    const voter = props.voter\n    const contract = props.instance\n    const workflowStatus = props.workflowStatus\n    const [inputValue, setInputValue] = useState('');\n    const onChangeInput = (event) => {\n        setInputValue(event.target.value);\n      }\n    const onSubmit = () => {\n        contract.methods.setVote(inputValue).send({from: voter[0]})\n            .on('error', function(){ \n                Store.addNotification({\n                    title: \"Error\",\n                    message: `Already voted or you are not a voter`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 6000,\n                      onScreen: true\n                  } });\n             })\n            .then(contract.events.Voted() \n            .once('data', function(event) {\n                Store.addNotification({\n                    title: \"Event data:\",\n                    message: `${event.event} with voter: ${event.returnValues.voter} for proposal #${event.returnValues.proposalId}`,\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 6000,\n                      onScreen: true\n                  } });        \n            })\n        )\n        setInputValue('')\n    }\n    return (\n          <>\n          { workflowStatus !== 3 ?\n            <></> :\n            <>\n            <input placeholder='Enter Proposal ID' value={inputValue || ''} onChange={onChangeInput} />\n            <Button variant=\"success\" onClick={onSubmit}>Vote For Proposal</Button>\n            </>\n          }\n         </>\n    )\n}\n\nexport default VoteProposal;","import Button from 'react-bootstrap/Button';\nimport React from \"react\";\nimport { ReactNotifications, Store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nfunction TallyVotes(props) {\n    const workflowStatus = props.workflowStatus\n    const WorkflowStatus = {\n        4: 'VotingSessionEnded',\n        5: 'VotesTallied'\n    }\n    const setWorkflowStatus = props.setWorkflowStatus\n    const contract = props.instance\n    const admin = props.admin\n\n    const onSubmit = () => {\n        contract.methods.tallyVotesDraw().send({from: admin})\n            .on('error', function(){ \n                Store.addNotification({\n                    title: \"Error :\",\n                    message: `error`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 6000,\n                      onScreen: true\n                  } });\n            })\n            .then(contract.events.WorkflowStatusChange()\n            .once('data', function(event) {\n\n                Store.addNotification({\n                    title: \"Event data: \",\n                    message: `${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to: ${WorkflowStatus[event.returnValues.newStatus]}`,\n                    type: \"success\",\n                    insert: \"top\",\n                    container: \"top-center\",\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                    dismiss: {\n                      duration: 6000,\n                      onScreen: true\n                  } });\n                 \n                })\n        )\n        setWorkflowStatus(5)\n    }\n    return (\n          <>\n          { workflowStatus !== 4  ?\n            <></> :\n            <Button variant=\"success\" onClick={onSubmit}>Tally Votes</Button> \n          }\n         </>\n    )\n}\nexport default TallyVotes;","import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction Results(props) {\r\n    const contract = props.instance;\r\n    const workflowStatus = props.workflowStatus;\r\n    const [resultText, setResultText]= React.useState('')\r\n\r\n    const getResults = async () => {\r\n        const winners = await contract.methods.getWinner().call();\r\n        let text = 'Winning propositions are :';     \r\n        \r\n        if (winners.length > 1) {\r\n            winners.forEach(element => {\r\n                text = <> {text} <br></br> {element.description}</>          \r\n            });\r\n            setResultText(text);    \r\n        } else {\r\n            setResultText(winners[0][0]);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        { workflowStatus !== 5  ?\r\n          <></> :\r\n          <Card style={{ width: '24rem' }}>\r\n            <Card.Body>\r\n                <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={getResults} >Election Result</Button> \r\n                <Card.Text>\r\n                    {resultText}\r\n                </Card.Text>\r\n            </Card.Body>   \r\n          </Card>\r\n        }\r\n       </>\r\n    )\r\n}\r\nexport default Results;\r\n","import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction GetVoter(props) {\r\n    const contract = props.instance;\r\n    const voter = props.voter;\r\n    const workflowStatus = props.workflowStatus;\r\n    const [addrValue, setInputAddr] = useState('');\r\n    const [voterText, setVoterText]= useState('')\r\n    const onChangeAddr = (event) => {\r\n        setInputAddr(event.target.value)\r\n      };\r\n    const getVoter = async () => {\r\n        try{\r\n            const _getVoter = await contract.methods.getVoter(addrValue).call({from: voter[0]}) \r\n            setVoterText(<ul> <li>Voter {addrValue}</li> <li>hasVoted: {_getVoter.hasVoted.toString()}</li> <li> isRegistered: {_getVoter.isRegistered.toString()} </li> <li>voterProposalId: {_getVoter.votedProposalId}</li> </ul>);\r\n        } catch(_) {\r\n            setVoterText('Not a voter');\r\n        }    \r\n        setInputAddr('')\r\n    }\r\n    return (\r\n        <>\r\n        <Card style={{ width: '24rem' }}>\r\n            <Card.Body>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                    placeholder='Enter Address' value={addrValue || ''}  onChange={onChangeAddr} \r\n                    />\r\n                    <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={getVoter}>\r\n                    Get Voter\r\n                    </Button>    \r\n                </InputGroup>\r\n                <Card.Text>\r\n                    {voterText}\r\n                </Card.Text>\r\n            </Card.Body>   \r\n        </Card>\r\n        </>\r\n    )\r\n}\r\nexport default GetVoter;\r\n","import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction GetProposal(props) {\r\n    const contract = props.instance;\r\n    const [proposalText, setProposalText]= useState('')\r\n    const [propIdValue, setInputPropId] = useState('');\r\n    const onChangePropId = (event) => {\r\n        setInputPropId(event.target.value)\r\n    };\r\n    const getOneProposal = async () => {\r\n\r\n        try {\r\n            const proposal = await contract.methods.getOneProposal(propIdValue).call({from: props.voter[0]})\r\n            setProposalText(`Proposal description : ${proposal.description}`)\r\n        \r\n        } catch(_) {\r\n            setProposalText('This proposal does NOT exist')\r\n        }\r\n        setInputPropId('')\r\n    }\r\n      return (\r\n        <>\r\n        { props.workflowStatus < 1 ?\r\n          <></> :\r\n        <>\r\n         <Card style={{ width: '24rem' }}>\r\n            <Card.Body>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                    placeholder=\"Enter Proposal Id\" value={propIdValue || ''}  onChange={onChangePropId} \r\n                    />\r\n                    <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={getOneProposal}>\r\n                    Get proposal\r\n                    </Button>\r\n                </InputGroup>\r\n                <Card.Text>\r\n                    {proposalText}\r\n                </Card.Text>\r\n            </Card.Body>   \r\n        </Card>\r\n        \r\n       \r\n        </>\r\n        }</>\r\n    )\r\n}\r\n\r\nexport default GetProposal;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport { ReactNotifications, Store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nimport AddVoter from './components/Add_Voter';\nimport UpdateStatus from './components/Update_Status'\nimport AddProposal from './components/Add_Proposal'\nimport VoteProposal from './components/Vote_Proposal'\nimport TallyVotes from './components/Tally_Votes'\nimport Results from \"./components/Results\";\nimport GetVoter from \"./components/Get_Voter\";\nimport GetProposal from \"./components/Get_Proposal\";\n\n\nfunction App() {\n  const [myWeb3Api, setMyWeb3Api] = useState({\n    provider: null,\n    isProviderLoaded: false,\n    web3: null,\n    contract: null\n  })\n  const [state, setState] = useState({ web3: null, accounts: null, contract: null, owned: null });\n\n  const [account, setAccount] = useState(null)\n  const [contract, setContract] = useState(null)\n  const [workflowStatus, setWorkflowStatus] = useState(null)\n  const [admin, setAdmin] = useState(null)\n  const currentStatus = {\n    0 : \"RegisteringVoters\",\n    1 : \"ProposalsRegistrationStarted\",\n    2 : \"ProposalsRegistrationEnded\",\n    3 : \"VotingSessionStarted\",\n    4 : \"VotingSessionEnded\",\n    5 : \"VotesTallied\"\n    }\n\n  const canConnectToContract = account && myWeb3Api.contract\n\n  window.ethereum.on('accountsChanged', function (accounts) {\n    window.location.reload()\n  });\n\n  useEffect(() => {\n    (async function () {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts)\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VotingContract.networks[networkId];\n        const instance = new web3.eth.Contract(\n          VotingContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n        setContract(instance);\n        const owner = await instance.methods.owner().call();\n        let owned = accounts[0]==owner;\n\n        setState({ web3: web3, accounts: accounts, contract: instance, owned });\n\n      } catch (error) {\n        alert('init failed')\n        console.error(error);\n      }\n    })();\n  }, [state, account])\n\n  useEffect(() => {\n    const loadWorkflowStatus = async () => {\n    const _contract  = state.contract\n    const status = await _contract.methods.workflowStatus().call()\n    setWorkflowStatus(Number(status))\n    const admin = await _contract.methods.owner().call();\n    setAdmin(admin)\n    }\n    state.contract && loadWorkflowStatus()\n  },[state])\n\n  if (state.owned) {\n    return (\n    \n      <div style={{background: 'content-box radial-gradient(crimson, skyblue)', display: 'flex',  justifyContent:'center', alignItems:'center',\n        height: '60rem'}}>\n          <ReactNotifications />   \n        <div >\n          <div>  \n            <h2>You are owner : yes ({account})</h2> \n          </div>\n          <div >\n            <h4>Workflow status: {currentStatus[workflowStatus]}</h4>\n          </div>\n          <UpdateStatus  instance={contract} admin={admin} setWorkflowStatus={(ws) => setWorkflowStatus(ws)} workflowStatus={workflowStatus}/>          \n          <div class=\"row\">\n          <AddVoter instance={contract} admin={admin} workflowStatus={workflowStatus}/>\n          <AddProposal instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          <VoteProposal instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          <TallyVotes instance={contract} admin={admin} setWorkflowStatus={(ws) => setWorkflowStatus(ws)} workflowStatus={workflowStatus}/>\n          </div>\n          <br></br>\n          <div class=\"row\">\n            <Results instance={contract} workflowStatus={workflowStatus}/>\n            <GetProposal instance={contract} voter={account} workflowStatus={workflowStatus}/>\n            <GetVoter instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          </div>\n\n        </div>\n      </div>   \n  );\n  } else {\n    return (  \n      <div style={{display: 'flex',  justifyContent:'center', alignItems:'center',\n        height: '60rem'}}>\n       <ReactNotifications /> \n        <div >\n          <div>\n            You are owner : no ({account})\n          </div>\n          <div >\n            Workflow status: {currentStatus[workflowStatus]}\n          </div>\n          <br></br>\n          <div class=\"row\">\n          <AddProposal instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          <VoteProposal instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          </div>\n          <br></br>\n          <div class=\"row\">        \n          <Results instance={contract} workflowStatus={workflowStatus}/>\n          <GetProposal instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          <GetVoter instance={contract} voter={account} workflowStatus={workflowStatus}/>\n          </div>\n        </div>\n      </div>   \n  );\n  } \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}